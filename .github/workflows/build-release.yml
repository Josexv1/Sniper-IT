name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v0.2.6, v1.0.0, etc.
  workflow_dispatch:  # Allows manual triggering

permissions:
  contents: write
  pull-requests: read

jobs:
  build:
    name: Build on ${{ matrix.display_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-2022
            display_name: Windows
            artifact_name: Sniper-IT-Agent.exe
            asset_name: Sniper-IT-Agent-Windows.exe
          - os: ubuntu-24.04
            display_name: Linux
            artifact_name: Sniper-IT-Agent
            asset_name: Sniper-IT-Agent-Linux

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: '3.11'

    - name: Install dependencies and build
      run: python build.py
      env:
        PYTHONIOENCODING: utf-8

    - name: Verify build
      run: |
        ls -la dist/
        if [ "${{ matrix.os }}" = "windows-2022" ]; then
          ./dist/Sniper-IT-Agent.exe --help || echo "Windows executable created"
        else
          ./dist/Sniper-IT-Agent --help || echo "Linux executable created"
        fi
      shell: bash

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.asset_name }}
        path: dist/${{ matrix.artifact_name }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-24.04
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Download Windows artifact
      uses: actions/download-artifact@v4
      with:
        name: Sniper-IT-Agent-Windows.exe
        path: ./release/

    - name: Download Linux artifact
      uses: actions/download-artifact@v4
      with:
        name: Sniper-IT-Agent-Linux
        path: ./release/

    - name: Get version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        name: Sniper-IT Agent ${{ steps.get_version.outputs.VERSION }}
        body: |
          ## Sniper-IT Agent ${{ steps.get_version.outputs.VERSION }}
          
          Cross-platform asset management agent for Snipe-IT integration.
          
          ### üì¶ Downloads
          - **Windows**: `Sniper-IT-Agent-Windows.exe` - Single file executable for Windows
          - **Linux**: `Sniper-IT-Agent-Linux` - Single file executable for Linux
          - **Source Code**: Available as zip/tar.gz below (GitHub auto-generated)
          
          ### üöÄ Quick Start
          1. Download the executable for your platform
          2. Run setup wizard: `./Sniper-IT-Agent --setup`
          3. Test configuration: `./Sniper-IT-Agent --test`
          4. Run full sync: `./Sniper-IT-Agent`
          
          ### ‚öôÔ∏è Features
          - Cross-platform Windows/Linux support
          - Interactive setup wizard with validation
          - Hostname-based asset detection
          - Comprehensive hardware/software data collection  
          - Monitor (display) detection and management
          - SSL certificate handling (--issl flag)
          - Real-time sync verification
          
          For detailed setup instructions, see the [README](https://github.com/${{ github.repository }}/blob/main/README.md).
        files: |
          ./release/Sniper-IT-Agent.exe
          ./release/Sniper-IT-Agent
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}